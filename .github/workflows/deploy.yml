name: Deploy Next.js App to HostGator

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm ci

      # Injeta a DATABASE_URL para gerar o Prisma Client corretamente
      - name: Generate Prisma Client
        run: npx prisma generate
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
      
      # Constrói a aplicação Next.js (modo Node.js, não estático)
      - name: Build Application
        run: npm run build
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
      
      # Faz o deploy dos arquivos necessários para a aplicação rodar
      - name: Deploy to HostGator via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          # Diretório onde sua aplicação Node.js está configurada no cPanel
          server-dir: ./ 
          # Limpa o diretório de destino antes de enviar os novos arquivos
          dangerous-clean-slate: true
          # Arquivos e pastas a serem enviados (não envia código-fonte desnecessário)
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
            **/.github/**
            README.md

      # Executa comandos no servidor para finalizar a instalação
      - name: Run Post-Deploy Commands via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.FTP_SERVER }} # Servidor SSH é geralmente o mesmo do FTP
          username: ${{ secrets.FTP_USERNAME }} # Use seu usuário cPanel ou o de FTP se tiver SSH
          password: ${{ secrets.FTP_PASSWORD }} # Senha do usuário acima
          script: |
            # Acessa o diretório da aplicação no servidor
            cd ./
            
            # Instala apenas as dependências de produção
            npm install --production
            
            # Aplica as migrações do banco de dados de forma segura
            npx prisma migrate deploy
            
            # Reinicia a aplicação Node.js no cPanel
            # Este comando pode variar, mas é o método mais comum
            if [ ! -d "tmp" ]; then
              mkdir tmp
            fi
            touch tmp/restart.txt
